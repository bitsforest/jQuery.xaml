<!doctype html>
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	<title>Test</title>

	<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
	<script>
	$(document).ready(function() {
		resolveTag('stackpanel');
	});


	/*
		1. resolve Tag
		2. replace tag
		3. add class
		4. replace CustomAttr
		5. restoreAttr
	*/

	function resolveTag(srcTagName) {
		switch(srcTagName.toLowerCase()) {
			case 'stackpanel':
				replaceTag(srcTagName, 'ul').addClass(srcTagName).replaceCustomAttr().childrenWrap('li').replaceChildrenCustomAttr();
				//return replaceTag(srcTagName, 'ul').addClass(srcTagName).replaceCustomAttr().restoreAttr().childrenWrap('li');
		}
	}

	jQuery.fn.replaceChildrenCustomAttr = function () {
		$(this).children().each(function () {
			$(this).replaceChildrenCustomAttr();
		});
		$(this).each(function() {
			$(this).replaceCustomAttr();
		});
	}


	function replaceTag(srcTagName, destTagName) {
		var newTag = null;
		$(srcTagName).replaceWith(function(){
			newTag = $("<"+destTagName+" />", {html: $(this).html(), data : $(this).data()});
			newTag.attr($(this).allAttr());
			return newTag;
		});
		return newTag;
	}

	/*
	jQuery.fn.restoreAttr = function() {
		$(this).attr($(this).allAttr());	
		return $(this);
	};
	*/

	jQuery.fn.allAttr = function() {
		var arr = new Object();
		for(var i = 0; i <  this[0].attributes.length; i++) {
			// skip custom attributes
			//if(this[0].attributes[i].nodeName.indexOf('data-') == 0) { continue; }
			arr[this[0].attributes[i].nodeName] = this[0].attributes[i].nodeValue;
		}
		return arr;
	};


	jQuery.fn.replaceCustomAttr = function () {
		for(var key in $(this).data()) {
			switch(key.toLowerCase()) {
				case 'background':
					$(this).css("background-color", $(this).data()[key]);
					break;
				case 'width':
					$(this).css("width", $(this).data()[key]);
					break;
				case 'height':
					$(this).css("height", $(this).data()[key]);
					break;
				case 'horizontalalignment':
					$(this).parent().css("text-align", $(this).data()[key].toLowerCase());
					break;
				default:
					$(this).addClass(key + "-" + $(this).data()[key]);
			}
			$(this).removeAttr('data-' + key);
		}
		return this;
	};

	jQuery.fn.childrenWrap = function (wrapTagName) {
		return $(this).children().each( function () {
			return $(this).wrap("<"+wrapTagName+" />");
		});
		return newTag;
	};

	</script>

	<style>
		ul.stackpanel {
			margin:0;
			padding:0;
			list-style:none;
		}

		ul.orientation-horizontal li{
			display:inline;
		}

		ul.orientation-vertical li {
			display:block;
			text-align:center;
		}

		ul.orientation-horizontal li * {
			height:100%;
			margin:0;
		}

		ul.orientation-vertical li * {
			width: 100%;
			margin:0;
		}
	</style>

</head>

<body>
<!--<stack data-orientation="vertical" data-background="yellow" name="abc" data-height='200px'><b>text</b><b>abc</b></stack>//-->
<!--
<stackpanel data-orientation="horizontal" data-background="yellow" name="abc" data-height='200px'><button data-width="100px">text</button><button data-width="100px" data-HorizontalAlignment="right" data-height="50px">abc</button></stackpanel>
//-->

<stackpanel data-orientation="horizontal" data-height="200px" data-background="green">
	<button data-height="100px">test</button>
</stackpanel>

</body>

</html>